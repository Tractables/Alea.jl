

var get_ns = function(n, ps) {
    if (ps.length == 0) {
        return [];
    }
    else {
        var etc = ps[0] + randomInteger(2*n+1)-n;
        return [etc].concat(get_ns(n, ps.slice(1)));
    }
}

var apply_condition = function(ns, o) {
  if(o.length <= 1) {
    return 0;
  }
  else {
    condition(ns[o[0]] < ns[o[1]]);
    return apply_condition(ns, o.slice(1));
  }
}

var condition_ns = function(ps, o) {
  var ns = get_ns(ps.length, ps);
  return apply_condition(ns, o);
}

var update = function(ps, os) {
  if (os.length == 0) {
    return 0;
  }
  else {
    condition_ns(ps, os[0]);
    return update(ps, os.slice(1));
  }
}


var gen = function(n, count) { 
  if(count <= 0) { 
    return [];
  }
  else {
    return [randomInteger(n)].concat(gen(n, count-1));
  }
}

var obs_mutex = function(ps) {
  if (ps.length == 0){
    return 0;
  }
  else {
    return obs_neq(ps[0], ps.slice(1)) + obs_mutex(ps.slice(1));
  }
}

var obs_neq = function(el, ps) {
  if (ps.length == 0) { 
    return 0;
  }
  else {
    condition(el != ps[0]);
    return obs_neq(el, ps.slice(1));
  }
}

var main = function(){
  var n = 4;
  var ps = gen(n, n);
  obs_mutex(ps);

  update(ps, [[3, 2, 1, 0], [1, 3, 2, 0], [1, 2, 3, 0]]);  
  return ps;
};

timeit(function(){Infer({method:'enumerate',model:main}).getDist(0)}).runtimeInMilliseconds